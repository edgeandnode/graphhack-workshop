"User's who are participating in the hack and submitting/voting on Projects."
type User @entity {
  "The user eth address."
  id: ID!
  "A list os Projects the User owns."
  projects: [Project!] @derivedFrom(field: "owner")
  "Count of all of the Projects the User owns."
  projectCount: Int!
  "All of the votes the User has submitted for Projects."
  votes: [Vote!] @derivedFrom(field: "user")
  "Count of all of the Votes the User has submited on Projects."
  voteCount: Int!
  "Block tiemstamp of when the User record was created."
  createdAt: BigInt!
  "Block timestamp of when the User was last updated."
  updatedAt: BigInt!
}

"The available Vote choices for a Project."
enum VoteChoice {
  "The user upvoted the Project."
  UP
  "The user downvoted the Project."
  DOWN
}

"A User's submitted Vote on a Project."
type Vote @entity {
  "Created ID of the Vote record."
  id: ID!
  "The User who submitted the Vote on the Project."
  user: User!
  "The Project the User submitted the Vote for."
  project: Project!
  "The User's Vote on the Project."
  vote: VoteChoice!
  "Block timestamp of when the Vote was submitted."
  timestamp: BigInt!
}

"Represents a Project submitted by a user and stored onchain."
type Project @entity {
  "The ID of the Project. Is a hash of the owner address and sequential ID."
  id: ID!
  "The user who created, and now owns, the Project."
  owner: User!
  "The Project name."
  name: String!
  "A subtitle of the Project name. Providing more clarity."
  subtitle: String
  "A description of the Project, its purpose, etc."
  description: String
  "A URL where the Project logo/image is stored. Preferably IPFS."
  imageUrl: String!
  "Upvotes on the Project by Users."
  upvotes: Int!
  "Downvotes on the Project by Users"
  downvotes: Int!
  "The total count of upvotes + downvotes."
  voteCount: Int!
  "Block tiemstamp of when the Project record was created."
  createdAt: BigInt!
  "Block timestamp of when the Project was last updated."
  updatedAt: BigInt!
  "A list of the Votes submitted for the Project."
  votes: [Vote!] @derivedFrom(field: "project")
}
